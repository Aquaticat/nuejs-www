
<aside @name="area-header" class="sidebar">

  <nav>
    <a href="/docs/" class="get-started { url == '/docs/' && 'selected' }">Getting started</a>
  </nav>

  <details :for="el in items" class="cat-{ el.cat }" open>
    <summary>{ el.title }</summary>
    <nav>
      <a :for="topic in el.topics" :href="topic.url"
        class="{ selected: topic.url == url }">
        { topic.label }
      </a>
    </nav>

  </details>

  <script>
    constructor({ titles, cats }) {
      this.items = Object.keys(cats).map(cat => {
        return {
          title: titles[cat] || capitalize(cat),
          topics: createTopics(cat, cats[cat]),
          cat,
        }
      })
    }

  </script>
</aside>

<!-- eyebrow -->
<p @name="page-header" class="eyebrow">
  { eyebrow }
</p>


<!-- right sidebar  -->
<aside @name="area-footer" class="aside">

  <nav>
    <h4>On this page</h4>
    <a :for="el in toc" :href="#{el.hash}" class="level-{ el.level}" :html="el.html">

    </a>
  </nav>

</aside>

<script>
  function capitalize(str) {
    return str[0].toUpperCase() + str.slice(1).replaceAll('-', ' ')
  }

  function toUrl(cat, label, slug) {
    if (cat == 'upcoming') return ''
    if (!slug) slug = label.toLowerCase().replaceAll(' ', '-')
    return `/docs/${cat}/${slug}.html`
  }

  function createTopics(cat, labels) {
    return labels.map(el => {
      const [label, slug] = el.split(' | ')
      return { url: toUrl(cat, label, slug), label }
    })
  }
</script>

